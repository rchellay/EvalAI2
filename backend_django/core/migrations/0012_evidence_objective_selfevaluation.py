# Generated by Django 5.2.7 on 2025-10-15 10:22

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0011_alter_evaluation_subject'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Evidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título de la evidencia', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción de la evidencia')),
                ('file', models.FileField(help_text='Archivo adjunto', upload_to='evidences/')),
                ('file_type', models.CharField(blank=True, help_text='Tipo de archivo (imagen, pdf, audio, etc.)', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(help_text='Estudiante al que pertenece la evidencia', on_delete=django.db.models.deletion.CASCADE, related_name='evidences', to='core.student')),
                ('subject', models.ForeignKey(blank=True, help_text='Asignatura relacionada (opcional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evidences', to='core.subject')),
                ('uploaded_by', models.ForeignKey(help_text='Usuario que subió la evidencia', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_evidences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['student', 'subject'], name='core_eviden_student_c09648_idx')],
            },
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título del objetivo', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción detallada del objetivo')),
                ('deadline', models.DateField(help_text='Fecha límite para lograr el objetivo')),
                ('status', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_progreso', 'En Progreso'), ('logrado', 'Logrado'), ('cancelado', 'Cancelado')], default='pendiente', help_text='Estado actual del objetivo', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='Usuario que creó el objetivo', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_objectives', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(help_text='Estudiante al que pertenece el objetivo', on_delete=django.db.models.deletion.CASCADE, related_name='objectives', to='core.student')),
                ('subject', models.ForeignKey(blank=True, help_text='Asignatura relacionada (opcional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='objectives', to='core.subject')),
            ],
            options={
                'ordering': ['deadline', 'status'],
                'indexes': [models.Index(fields=['student', 'status'], name='core_object_student_babda7_idx'), models.Index(fields=['deadline'], name='core_object_deadlin_73f295_idx')],
            },
        ),
        migrations.CreateModel(
            name='SelfEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(help_text='Puntuación de 1 a 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, help_text='Comentario de la autoevaluación')),
                ('evaluation_type', models.CharField(choices=[('autoevaluacion', 'Autoevaluación'), ('coevaluacion', 'Coevaluación')], default='autoevaluacion', help_text='Tipo de evaluación', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(help_text='Estudiante que realiza la autoevaluación', on_delete=django.db.models.deletion.CASCADE, related_name='self_evaluations', to='core.student')),
                ('subject', models.ForeignKey(blank=True, help_text='Asignatura evaluada (opcional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='self_evaluations', to='core.subject')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['student', 'subject'], name='core_selfev_student_414f7b_idx')],
            },
        ),
    ]
